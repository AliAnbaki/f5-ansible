---

#
# Copyright 2017 F5 Networks Inc.
#
# This file is part of Ansible
#
# Ansible is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Ansible is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Ansible.  If not, see <http://www.gnu.org/licenses/>.
#

heat_template_version: 2015-04-30
parameters:
  wait_handle:
    type: string
    description: The image to be used on the compute instance.
  network_1_network:
    type: string
  network_2_network:
    type: string
  mgmt_network:
    type: string
  bigip_data_security_group:
    type: string
  bigip_mgmt_security_group:
    type: string
  ve_image:
    type: string
    description: The image to be used on the compute instance.
    constraints:
      - custom_constraint: glance.image
  use_config_drive:
    type: boolean
    description: Use config drive to provider meta and user data.
    default: false
  ve_flavor:
    type: string
    description: Type of instance (flavor) to be used for the VE.
    default: m1.medium
    constraints:
      - custom_constraint: nova.flavor
  f5_ve_os_ssh_key:
    type: string
    description: Name of key-pair to be installed on the FW instances.
    constraints:
      - custom_constraint: nova.keypair
  admin_password:
    type: string
    description: Password used to perform image import services
    hidden: true
  root_password:
    type: string
    description: Password used to perform image import services
    hidden: true
  license:
    type: string
    description: F5 TMOS License Base key
    hidden: true
  network_1_name:
    type: string
    description: Name of the first VLAN on the first tmm interface
  network_2_name:
    type: string
    description: Name of the second VLAN on the second tmm interface
resources:
  mgmt_port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: mgmt_network }
      security_groups: [{ get_param: bigip_mgmt_security_group }]
  network_1_port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: network_1_network }
      security_groups: [{ get_param: bigip_data_security_group }]
  network_2_port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: network_2_network }
      security_groups: [{ get_param: bigip_data_security_group }]
  ve_instance:
    type: OS::Nova::Server
    properties:
      image: { get_param: ve_image }
      flavor: { get_param: ve_flavor }
      key_name: { get_param: f5_ve_os_ssh_key }
      networks:
        - port: { get_resource: mgmt_port }
        - port: { get_resource: network_1_port }
        - port: { get_resource: network_2_port }
      user_data_format: RAW
      config_drive: { get_param: use_config_drive }
      user_data:
        str_replace:
          params:
            __admin_password__: { get_param: admin_password }
            __root_password__: { get_param: root_password }
            __license__: { get_param: license }
            __network_1_name__: { get_param: network_1_name }
            __network_2_name__: { get_param: network_2_name }
            __network_1_address__: { get_attr: [network_1_port, fixed_ips, 0, ip_address] }
            __network_1_cidr__: { get_attr: [network_1_port, subnets, 0, cidr] }
            __network_2_address__: { get_attr: [network_2_port, fixed_ips, 0, ip_address] }
            __network_2_cidr__: { get_attr: [network_2_port, subnets, 0, cidr] }
            wc_notify: { get_param: wait_handle }
          template: |
            {
               "bigip": {
                   "f5_ve_os_ssh_key_inject": "true",
                   "change_passwords": "true",
                   "admin_password": "__admin_password__",
                   "root_password": "__root_password__",
                   "license": {
                       "basekey": "__license__",
                       "host": "None",
                       "port": "8080",
                       "proxyhost": "None",
                       "proxyport": "443",
                       "proxyscripturl": "None"
                   },
                   "modules": {
                       "auto_provision": "false",
                       "ltm": "nominal",
                       "gtm": "nominal"
                   },
                   "network": {
                       "dhcp": "true",
                       "selfip_prefix": "selfip-",
                       "vlan_prefix": "network-",
                       "interfaces": {
                           "1.1": {
                               "dhcp": "false",
                               "selfip_allow_service": "default",
                               "address": "__network_1_address__",
                               "netmask": "__network_1_cidr__",
                               "selfip_name": "selfip.__network_1_name__",
                               "selfip_description": "Self IP address for BIG-IP __network_1_name__ network",
                               "vlan_name": "__network_1_name__",
                               "vlan_description": "VLAN for BIG-IP __network_1_name__ network traffic",
                               "is_failover": "false",
                               "is_sync": "false",
                               "is_mirror_primary": "false",
                               "is_mirror_secondary": "false"
                           },
                           "1.2": {
                               "dhcp": "false",
                               "selfip_allow_service": "default",
                               "address": "__network_2_address__",
                               "netmask": "__network_2_cidr__",
                               "selfip_name": "selfip.__network_2_name__",
                               "selfip_description": "Self IP address for BIG-IP __network_2_name__ network",
                               "vlan_name": "__network_2_name__",
                               "vlan_description": "VLAN for BIG-IP __network_2_name__ network traffic",
                               "is_failover": "false",
                               "is_sync": "false",
                               "is_mirror_primary": "false",
                               "is_mirror_secondary": "false"
                           }
                       }
                   },
                   "wait_condition_notify": "wc_notify --insecure --data-binary '{\"status\": \"SUCCESS\"}'"
               }
            }
outputs:
  ve_instance_name:
    description: Name of the instance
    value: { get_attr: [ve_instance, name] }
  ve_instance_id:
    description: ID of the instance
    value: { get_resource: ve_instance }
  mgmt_ip:
    description: The management IP of the VE instance
    value: { get_attr: [mgmt_port, fixed_ips, 0, ip_address] }
  network_1_ip:
    description: The 1.1 Nonfloating SelfIP address of VE instance
    value: { get_attr: [network_1_port, fixed_ips, 0, ip_address] }
  network_2_ip:
    description: The 1.2 Nonfloating SelfIP address of VE instance
    value: { get_attr: [network_2_port, fixed_ips, 0, ip_address] }
