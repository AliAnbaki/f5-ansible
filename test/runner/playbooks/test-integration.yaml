---

# Copyright (c) 2017 F5 Networks Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

# Run integration tests on a given harness
#
# This playbook provides a way to run the given module's integration tests
# on the given harness. It is not required that the harness name match
# the harness itself. In fact, in many cases (in CI/CD) it wont. The CI/CD
# harness names typically resemble the following,
#
#     TwoArmed-bigip-13.0.0-build-234
#
# While the harness itself is called
#
#     TwoArmed-bigip-13.0.0
#
# The difference illustrated is that CI/CD harness names include the build
# number generated by CI/CD system. This is done to prevent conflicting
# harness names from being generated.
#
# Usage:
#
#    ansible-playbook -i notahost, test-integration.yaml [OPTIONS]:
#
# Examples:
#
#    Run the bigip_selfip integration tests on the TwoArmed-bigip-13.0.0-build.28 harness
#
#    ansible-playbook -i notahost, test-integration.yaml -e module=bigip_selfip -e harness=TwoArmed-bigip-13.0.0-build.28
#
# Options:
#
#     harness:
#         description: The harness to create a stack from.
#         required: True

#     name:
#         description: Name of the harness that you want to create.
#         required: True
#

- name: Setup devices under test
  hosts: bigip
  connection: local
  any_errors_fatal: true

  vars_prompt:
      - name: "harness_name"
        prompt: "Which harness do you want to run the tests on?"
        private: no

      - name: "module"
        prompt: "Which module do you want to test?"
        private: no

  tasks:
      - name: Set root directory for tests
        set_fact:
            tld: "{{ playbook_dir|dirname|dirname|dirname }}"

      - name: Run integration tests
        command: "ansible-playbook -i inventory/stack {{ module }}.py"
        args:
            chdir: "{{ tld }}/test/integration"
        environment:
            STACK_NAME: "{{ harness_name }}"
