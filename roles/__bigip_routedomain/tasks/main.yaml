---

- name: Create route domain
  bigip_routedomain:
      id: "{{ new_routedomain }}"
      server: "{{ inventory_hostname }}"
      server_port: "{{ bigip_port }}"
      user: "{{ bigip_username }}"
      password: "{{ bigip_password }}"
      validate_certs: "{{ validate_certs }}"
  register: result

- name: Assert Create route domain
  assert:
      that:
          - result|changed

- name: Create route domain - Idempotent check
  bigip_routedomain:
      id: "{{ new_routedomain }}"
      server: "{{ inventory_hostname }}"
      server_port: "{{ bigip_port }}"
      user: "{{ bigip_username }}"
      password: "{{ bigip_password }}"
      validate_certs: "{{ validate_certs }}"
  register: result

- name: Assert Create route domain - Idempotent check
  assert:
      that:
          - not result|changed

- name: Set a description
  bigip_routedomain:
      id: "{{ new_routedomain }}"
      description: "{{ valid_description }}"
      server: "{{ inventory_hostname }}"
      server_port: "{{ bigip_port }}"
      user: "{{ bigip_username }}"
      password: "{{ bigip_password }}"
      validate_certs: "{{ validate_certs }}"
  register: result

- name: Assert Set a description
  assert:
      that:
          - result|changed

- name: Create Set a description - Idempotent check
  bigip_routedomain:
      id: "{{ new_routedomain }}"
      description: "{{ valid_description }}"
      password: "{{ bigip_password }}"
      server: "{{ inventory_hostname }}"
      server_port: "{{ bigip_port }}"
      user: "{{ bigip_username }}"
      validate_certs: "{{ validate_certs }}"
  register: result

- name: Assert Set a description - Idempotent check
  assert:
      that:
          - not result|changed

- name: Disable strict isolation
  bigip_routedomain:
      id: "{{ new_routedomain }}"
      server: "{{ inventory_hostname }}"
      server_port: "{{ bigip_port }}"
      strict: "disabled"
      user: "{{ bigip_username }}"
      password: "{{ bigip_password }}"
      validate_certs: "{{ validate_certs }}"
  register: result

- name: Assert Disable strict isolation
  assert:
      that:
          - result|changed

- name: Disable strict isolation - Idempotent check
  bigip_routedomain:
      id: "{{ new_routedomain }}"
      password: "{{ bigip_password }}"
      server: "{{ inventory_hostname }}"
      server_port: "{{ bigip_port }}"
      strict: "disabled"
      user: "{{ bigip_username }}"
      validate_certs: "{{ validate_certs }}"
  register: result

- name: Assert Disable strict isolation - Idempotent check
  assert:
      that:
          - not result|changed

- name: Enable strict isolation
  bigip_routedomain:
      id: "{{ new_routedomain }}"
      server: "{{ inventory_hostname }}"
      server_port: "{{ bigip_port }}"
      strict: "enabled"
      user: "{{ bigip_username }}"
      password: "{{ bigip_password }}"
      validate_certs: "{{ validate_certs }}"
  register: result

- name: Assert Enable strict isolation
  assert:
      that:
          - result|changed

- name: Enable strict isolation - Idempotent check
  bigip_routedomain:
      id: "{{ new_routedomain }}"
      password: "{{ bigip_password }}"
      server: "{{ inventory_hostname }}"
      server_port: "{{ bigip_port }}"
      strict: "enabled"
      user: "{{ bigip_username }}"
      validate_certs: "{{ validate_certs }}"
  register: result

- name: Assert Enable strict isolation - Idempotent check
  assert:
      that:
          - not result|changed

- name: Set parent route domain
  bigip_routedomain:
      id: "{{ new_routedomain }}"
      parent: "{{ default_parent }}"
      password: "{{ bigip_password }}"
      server: "{{ inventory_hostname }}"
      server_port: "{{ bigip_port }}"
      user: "{{ bigip_username }}"
      validate_certs: "{{ validate_certs }}"
  register: result

- name: Assert Set parent route domain
  assert:
      that:
          - result|changed

- name: Set parent route domain - Idempotent check
  bigip_routedomain:
      id: "{{ new_routedomain }}"
      parent: "{{ default_parent }}"
      password: "{{ bigip_password }}"
      server: "{{ inventory_hostname }}"
      server_port: "{{ bigip_port }}"
      user: "{{ bigip_username }}"
      validate_certs: "{{ validate_certs }}"
  register: result

- name: Assert Set parent route domain - Idempotent check
  assert:
      that:
          - not result|changed

- name: Set vlans
  bigip_routedomain:
      id: "{{ new_routedomain }}"
      password: "{{ bigip_password }}"
      server: "{{ inventory_hostname }}"
      server_port: "{{ bigip_port }}"
      user: "{{ bigip_username }}"
      validate_certs: "{{ validate_certs }}"
      vlans: "{{ valid_vlans }}"
  register: result

- name: Assert Set vlans
  assert:
      that:
          - result|changed

- name: Set vlans - Idempotent check
  bigip_routedomain:
      id: "{{ new_routedomain }}"
      password: "{{ bigip_password }}"
      server: "{{ inventory_hostname }}"
      server_port: "{{ bigip_port }}"
      user: "{{ bigip_username }}"
      validate_certs: "{{ validate_certs }}"
      vlans: "{{ valid_vlans }}"
  register: result

- name: Assert Set vlans - Idempotent check
  assert:
      that:
          - not result|changed

- name: Set a single routing protocol, valid
  bigip_routedomain:
      id: "{{ new_routedomain }}"
      password: "{{ bigip_password }}"
      routing_protocol: "{{ valid_routing_protocol }}"
      server: "{{ inventory_hostname }}"
      server_port: "{{ bigip_port }}"
      user: "{{ bigip_username }}"
      validate_certs: "{{ validate_certs }}"
  register: result

- name: Assert Set a single routing protocol, valid
  assert:
      that:
          - result|changed

- name: Set a single routing protocol, valid - Idempotent check
  bigip_routedomain:
      id: "{{ new_routedomain }}"
      password: "{{ bigip_password }}"
      routing_protocol: "{{ valid_routing_protocol }}"
      server: "{{ inventory_hostname }}"
      server_port: "{{ bigip_port }}"
      user: "{{ bigip_username }}"
      validate_certs: "{{ validate_certs }}"
  register: result

- name: Assert Set a single routing protocol, valid - Idempotent check
  assert:
      that:
          - not result|changed

- name: Set a single routing protocol, invalid
  bigip_routedomain:
      id: "{{ new_routedomain }}"
      password: "{{ bigip_password }}"
      routing_protocol: "{{ invalid_routing_protocol }}"
      server: "{{ inventory_hostname }}"
      server_port: "{{ bigip_port }}"
      user: "{{ bigip_username }}"
      validate_certs: "{{ validate_certs }}"
  register: result
  ignore_errors: true

- name: Assert Set a single routing protocol, invalid
  assert:
      that:
          - not result|changed

- name: Set a single routing protocol, invalid - Idempotent check
  bigip_routedomain:
      id: "{{ new_routedomain }}"
      password: "{{ bigip_password }}"
      routing_protocol: "{{ invalid_routing_protocol }}"
      server: "{{ inventory_hostname }}"
      server_port: "{{ bigip_port }}"
      user: "{{ bigip_username }}"
      validate_certs: "{{ validate_certs }}"
  register: result
  ignore_errors: true

- name: Assert Set a single routing protocol, invalid - Idempotent check
  assert:
      that:
          - not result|changed

- name: Set a list of routing protocols, valid
  bigip_routedomain:
      id: "{{ new_routedomain }}"
      password: "{{ bigip_password }}"
      routing_protocol: "{{ valid_routing_protocols }}"
      server: "{{ inventory_hostname }}"
      server_port: "{{ bigip_port }}"
      user: "{{ bigip_username }}"
      validate_certs: "{{ validate_certs }}"
  register: result

- name: Assert Set a list of routing protocols, valid
  assert:
      that:
          - result|changed

- name: Set a list of routing protocols, valid - Idempotent check
  bigip_routedomain:
      id: "{{ new_routedomain }}"
      password: "{{ bigip_password }}"
      routing_protocol: "{{ valid_routing_protocols }}"
      server: "{{ inventory_hostname }}"
      server_port: "{{ bigip_port }}"
      user: "{{ bigip_username }}"
      validate_certs: "{{ validate_certs }}"
  register: result

- name: Assert Set a list of routing protocols, valid - Idempotent check
  assert:
      that:
          - not result|changed

- name: Set a list of routing protocols, invalid
  bigip_routedomain:
      id: "{{ new_routedomain }}"
      password: "{{ bigip_password }}"
      routing_protocol: "{{ invalid_routing_protocols }}"
      server: "{{ inventory_hostname }}"
      server_port: "{{ bigip_port }}"
      user: "{{ bigip_username }}"
      validate_certs: "{{ validate_certs }}"
  register: result
  ignore_errors: true

- name: Assert Set a list of routing protocols, invalid
  assert:
      that:
          - not result|changed

- name: Set a list of routing protocols, invalid - Idempotent check
  bigip_routedomain:
      id: "{{ new_routedomain }}"
      password: "{{ bigip_password }}"
      routing_protocol: "{{ invalid_routing_protocols }}"
      server: "{{ inventory_hostname }}"
      server_port: "{{ bigip_port }}"
      user: "{{ bigip_username }}"
      validate_certs: "{{ validate_certs }}"
  register: result
  ignore_errors: true

- name: Assert Set a list of routing protocols, invalid - Idempotent check
  assert:
      that:
          - not result|changed

- name: Set connection limit, valid
  bigip_routedomain:
      connection_limit: "{{ valid_connection_limit }}"
      id: "{{ new_routedomain }}"
      password: "{{ bigip_password }}"
      server: "{{ inventory_hostname }}"
      server_port: "{{ bigip_port }}"
      user: "{{ bigip_username }}"
      validate_certs: "{{ validate_certs }}"
  register: result

- name: Assert Set connection limit, valid
  assert:
      that:
          - result|changed

- name: Set connection limit, valid - Idempotent check
  bigip_routedomain:
      connection_limit: "{{ valid_connection_limit }}"
      id: "{{ new_routedomain }}"
      password: "{{ bigip_password }}"
      server: "{{ inventory_hostname }}"
      server_port: "{{ bigip_port }}"
      user: "{{ bigip_username }}"
      validate_certs: "{{ validate_certs }}"
  register: result

- name: Assert Set connection limit, valid - Idempotent check
  assert:
      that:
          - not result|changed

- name: Set connection limit, invalid
  bigip_routedomain:
      connection_limit: "{{ invalid_connection_limit }}"
      id: "{{ new_routedomain }}"
      password: "{{ bigip_password }}"
      server: "{{ inventory_hostname }}"
      server_port: "{{ bigip_port }}"
      user: "{{ bigip_username }}"
      validate_certs: "{{ validate_certs }}"
  register: result
  ignore_errors: true

- name: Assert Set connection limit, invalid
  assert:
      that:
          - not result|changed

- name: Set connection limit, invalid - Idempotent check
  bigip_routedomain:
      connection_limit: "{{ invalid_connection_limit }}"
      id: "{{ new_routedomain }}"
      password: "{{ bigip_password }}"
      server: "{{ inventory_hostname }}"
      server_port: "{{ bigip_port }}"
      user: "{{ bigip_username }}"
      validate_certs: "{{ validate_certs }}"
  register: result
  ignore_errors: true

- name: Assert Set connection limit, invalid - Idempotent check
  assert:
      that:
          - not result|changed

- name: Set flow eviction policy, valid
  bigip_routedomain:
      flow_eviction_policy: "{{ valid_flow_eviction_policy }}"
      id: "{{ new_routedomain }}"
      password: "{{ bigip_password }}"
      server: "{{ inventory_hostname }}"
      server_port: "{{ bigip_port }}"
      user: "{{ bigip_username }}"
      validate_certs: "{{ validate_certs }}"
  register: result

- name: Assert Set flow eviction policy, valid
  assert:
      that:
          - result|changed

- name: Set flow eviction policy, valid - Idempotent check
  bigip_routedomain:
      flow_eviction_policy: "{{ valid_flow_eviction_policy }}"
      id: "{{ new_routedomain }}"
      password: "{{ bigip_password }}"
      server: "{{ inventory_hostname }}"
      server_port: "{{ bigip_port }}"
      user: "{{ bigip_username }}"
      validate_certs: "{{ validate_certs }}"
  register: result
  ignore_errors: true

- name: Assert Set flow eviction policy, valid - Idempotent check
  assert:
      that:
          - not result|changed

- name: Set flow eviction policy, invalid
  bigip_routedomain:
      flow_eviction_policy: "{{ item }}"
      id: "{{ new_routedomain }}"
      password: "{{ bigip_password }}"
      server: "{{ inventory_hostname }}"
      server_port: "{{ bigip_port }}"
      user: "{{ bigip_username }}"
      validate_certs: "{{ validate_certs }}"
  register: result
  ignore_errors: true
  with_items: invalid_flow_eviction_policy

- name: Assert Set flow eviction policy, invalid
  assert:
      that:
          - not result|changed

- name: Set flow eviction policy, invalid - Idempotent check
  bigip_routedomain:
      flow_eviction_policy: "{{ item }}"
      id: "{{ new_routedomain }}"
      password: "{{ bigip_password }}"
      server: "{{ inventory_hostname }}"
      server_port: "{{ bigip_port }}"
      user: "{{ bigip_username }}"
      validate_certs: "{{ validate_certs }}"
  register: result
  ignore_errors: true
  with_items: invalid_flow_eviction_policy

- name: Assert Set flow eviction policy, invalid - Idempotent check
  assert:
      that:
          - not result|changed

- name: Set bandwidth control policy, valid
  bigip_routedomain:
      bwc_policy: "{{ valid_bwc_policy }}"
      id: "{{ new_routedomain }}"
      password: "{{ bigip_password }}"
      server: "{{ inventory_hostname }}"
      server_port: "{{ bigip_port }}"
      user: "{{ bigip_username }}"
      validate_certs: "{{ validate_certs }}"
  register: result

- name: Assert Set bandwidth control policy, valid
  assert:
      that:
          - result|changed

- name: Set bandwidth control policy, valid - Idempotent check
  bigip_routedomain:
      bwc_policy: "{{ valid_bwc_policy }}"
      id: "{{ new_routedomain }}"
      password: "{{ bigip_password }}"
      server: "{{ inventory_hostname }}"
      server_port: "{{ bigip_port }}"
      user: "{{ bigip_username }}"
      validate_certs: "{{ validate_certs }}"
  register: result

- name: Assert Set bandwidth control policy, valid - Idempotent check
  assert:
      that:
          - not result|changed

- name: Set bandwidth control policy, invalid
  bigip_routedomain:
      bwc_policy: "{{ item }}"
      id: "{{ new_routedomain }}"
      password: "{{ bigip_password }}"
      server: "{{ inventory_hostname }}"
      server_port: "{{ bigip_port }}"
      user: "{{ bigip_username }}"
      validate_certs: "{{ validate_certs }}"
  register: result
  ignore_errors: true
  with_items: invalid_bwc_policy

- name: Assert Set bandwith control policy, invalid
  assert:
      that:
          - not result|changed

- name: Set bandwidth control policy, invalid - Idempotent check
  bigip_routedomain:
      bwc_policy: "{{ item }}"
      id: "{{ new_routedomain }}"
      password: "{{ bigip_password }}"
      server: "{{ inventory_hostname }}"
      server_port: "{{ bigip_port }}"
      user: "{{ bigip_username }}"
      validate_certs: "{{ validate_certs }}"
  register: result
  ignore_errors: true
  with_items: invalid_bwc_policy

- name: Assert Set bandwidth control policy, invalid - Idempotent check
  assert:
      that:
          - not result|changed

- name: Set service policy, valid
  bigip_routedomain:
      id: "{{ new_routedomain }}"
      password: "{{ bigip_password }}"
      server: "{{ inventory_hostname }}"
      server_port: "{{ bigip_port }}"
      service_policy: "{{ valid_service_policy }}"
      user: "{{ bigip_username }}"
      validate_certs: "{{ validate_certs }}"
  register: result

- name: Assert Set service policy, valid
  assert:
      that:
          - result|changed

- name: Set service policy, valid - Idempotent check
  bigip_routedomain:
      id: "{{ new_routedomain }}"
      password: "{{ bigip_password }}"
      server: "{{ inventory_hostname }}"
      server_port: "{{ bigip_port }}"
      service_policy: "{{ valid_service_policy }}"
      user: "{{ bigip_username }}"
      validate_certs: "{{ validate_certs }}"
  register: result

- name: Assert Set service policy, valid - Idempotent check
  assert:
      that:
          - not result|changed

- name: Set service policy, invalid
  bigip_routedomain:
      id: "{{ new_routedomain }}"
      password: "{{ bigip_password }}"
      server: "{{ inventory_hostname }}"
      server_port: "{{ bigip_port }}"
      service_policy: "{{ item }}"
      user: "{{ bigip_username }}"
      validate_certs: "{{ validate_certs }}"
  register: result
  ignore_errors: true
  with_items: invalid_service_policy

- name: Assert Set service policy, invalid
  assert:
      that:
          - not result|changed

- name: Set service policy, invalid - Idempotent check
  bigip_routedomain:
      id: "{{ new_routedomain }}"
      password: "{{ bigip_password }}"
      server: "{{ inventory_hostname }}"
      server_port: "{{ bigip_port }}"
      service_policy: "{{ item }}"
      user: "{{ bigip_username }}"
      validate_certs: "{{ validate_certs }}"
  register: result
  ignore_errors: true
  with_items: invalid_service_policy

- name: Assert Set service policy, invalid - Idempotent check
  assert:
      that:
          - not result|changed