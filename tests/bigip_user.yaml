- name: Test the bigip_user module
  hosts: f5-test
  connection: local

  vars:
      bigip_username: "admin"
      bigip_password: "admin"
      username_credential: "johnd"
      password_credential: "password"
      encrypted_credential: "$6$IJbx6zvSx/BXlGIN$NXl03OfWhqJ5CYsfR6YcrCyLulpISLoM4CkL69pj7MRqKWd3/Gqep9DhkdSaD/Bft5.e/Zt0mriuh1FCtai6K/"
      partition_access1:
          - "all:admin"
          - "Common:guest"
          - "Common:operator"
      partition_access2:
          - "all:admin"
          - "Common:operator"
      partition_access3:
          - "foo:operator"
      validate_certs: "no"
      partition: "foo"
      full_name: "John Doe"

  tasks:
      - name: Create user
        bigip_user:
            server: "{{ inventory_hostname }}"
            user: "{{ bigip_username }}"
            password: "{{ bigip_password }}"
            validate_certs: "{{ validate_certs }}"
            username_credential: "{{ username_credential }}"
            password_credential: "{{ password_credential }}"
        register: result

      - name: Assert Create user
        assert:
            that:
                - result|changed

      - name: Create user - Idempotent check
        bigip_user:
            server: "{{ inventory_hostname }}"
            user: "{{ bigip_username }}"
            password: "{{ bigip_password }}"
            validate_certs: "{{ validate_certs }}"
            username_credential: "{{ username_credential }}"
            password_credential: "{{ password_credential }}"
        register: result

      # The default setting for update_password is "always", so this
      # check should return a "changed" event
      - name: Assert Create user - Idempotent check
        assert:
            that:
                - result|changed

      - name: Create user, encrypted password - Idempotent check
        bigip_user:
            server: "{{ inventory_hostname }}"
            user: "{{ bigip_username }}"
            password: "{{ bigip_password }}"
            validate_certs: "{{ validate_certs }}"
            username_credential: "{{ username_credential }}"
            encrypted_credential: "{{ encrypted_credential }}"
        register: result

      # The default setting for update_password is "always", so this
      # check should return a "changed" event
      - name: Assert Create user - Idempotent check
        assert:
            that:
                - result|changed

      - name: Create user, no password - Idempotent check
        bigip_user:
            server: "{{ inventory_hostname }}"
            user: "{{ bigip_username }}"
            password: "{{ bigip_password }}"
            validate_certs: "{{ validate_certs }}"
            username_credential: "{{ username_credential }}"
        register: result

      # The default setting for update_password is "always", so this
      # check should NOT return a "changed" event
      - name: Assert Create user - Idempotent check
        assert:
            that:
                - not result|changed

      - name: Create user with password on_create
        bigip_user:
            server: "{{ inventory_hostname }}"
            user: "{{ bigip_username }}"
            password: "{{ bigip_password }}"
            validate_certs: "{{ validate_certs }}"
            username_credential: "{{ username_credential }}"
            password_credential: "{{ password_credential }}"
            update_password: "on_create"
        register: result

      - name: Assert Create user - Idempotent check
        assert:
            that:
                - not result|changed
        tags:
            - create

      - name: Update user full name
        bigip_user:
            server: "{{ inventory_hostname }}"
            user: "{{ bigip_username }}"
            password: "{{ bigip_password }}"
            validate_certs: "{{ validate_certs }}"
            username_credential: "{{ username_credential }}"
            full_name: "{{ full_name }}"
        register: result

      - name: Assert Update user full name
        assert:
            that:
                - result|changed

      - name: Update user full name - Idempotent check
        bigip_user:
            server: "{{ inventory_hostname }}"
            user: "{{ bigip_username }}"
            password: "{{ bigip_password }}"
            validate_certs: "{{ validate_certs }}"
            username_credential: "{{ username_credential }}"
            full_name: "{{ full_name }}"
        register: result

      - name: Assert Update user full name
        assert:
            that:
                - not result|changed

      - name: Update user shell to tmsh
        bigip_user:
            server: "{{ inventory_hostname }}"
            user: "{{ bigip_username }}"
            password: "{{ bigip_password }}"
            validate_certs: "{{ validate_certs }}"
            username_credential: "{{ username_credential }}"
            shell: "tmsh"
        register: result

      - name: Assert Update user shell to tmsh
        assert:
            that:
                - result|changed

      - name: Update user shell to tmsh - Idempotent check
        bigip_user:
            server: "{{ inventory_hostname }}"
            user: "{{ bigip_username }}"
            password: "{{ bigip_password }}"
            validate_certs: "{{ validate_certs }}"
            username_credential: "{{ username_credential }}"
            shell: "tmsh"
        register: result

      - name: Assert Update user shell to tmsh - Idempotent check
        assert:
            that:
                - not result|changed

      - name: Update user shell to none
        bigip_user:
            server: "{{ inventory_hostname }}"
            user: "{{ bigip_username }}"
            password: "{{ bigip_password }}"
            validate_certs: "{{ validate_certs }}"
            username_credential: "{{ username_credential }}"
            shell: "none"
        register: result

      - name: Assert Update user shell to none
        assert:
            that:
                - result|changed

      - name: Update user shell to none - Idempotent check
        bigip_user:
            server: "{{ inventory_hostname }}"
            user: "{{ bigip_username }}"
            password: "{{ bigip_password }}"
            validate_certs: "{{ validate_certs }}"
            username_credential: "{{ username_credential }}"
            shell: "none"
        register: result

      - name: Assert Update user shell to none - Idempotent check
        assert:
            that:
                - not result|changed

      # This should fail because the user does not have the appropriate role
      - name: Update user shell to bash
        bigip_user:
            server: "{{ inventory_hostname }}"
            user: "{{ bigip_username }}"
            password: "{{ bigip_password }}"
            validate_certs: "{{ validate_certs }}"
            username_credential: "{{ username_credential }}"
            shell: "bash"
        ignore_errors: true
        register: result

      - name: Assert Update user shell to bash
        assert:
            that:
                - not result|changed

      - name: Remove user
        bigip_user:
            server: "{{ inventory_hostname }}"
            user: "{{ bigip_username }}"
            password: "{{ bigip_password }}"
            validate_certs: "{{ validate_certs }}"
            username_credential: "{{ username_credential }}"
            state: "absent"
        register: result

      - name: Assert Remove user
        assert:
            that:
                - result|changed

      - name: Remove user - Idempotent check
        bigip_user:
            server: "{{ inventory_hostname }}"
            user: "{{ bigip_username }}"
            password: "{{ bigip_password }}"
            validate_certs: "{{ validate_certs }}"
            username_credential: "{{ username_credential }}"
            state: "absent"
        register: result

      - name: Assert Remove user - Idempotent check
        assert:
            that:
                - not result|changed

      - name: Create user on a different partition
        bigip_user:
            server: "{{ inventory_hostname }}"
            user: "{{ bigip_username }}"
            password: "{{ bigip_password }}"
            validate_certs: "{{ validate_certs }}"
            username_credential: "{{ username_credential }}"
            password_credential: "{{ password_credential }}"
            partition: "{{ partition }}"
        register: result

      - name: Assert Create user on a different partition
        assert:
            that:
                - result|changed

      - name: Create user on a different partition - Idempotent check
        bigip_user:
            server: "{{ inventory_hostname }}"
            user: "{{ bigip_username }}"
            password: "{{ bigip_password }}"
            validate_certs: "{{ validate_certs }}"
            username_credential: "{{ username_credential }}"
            password_credential: "{{ password_credential }}"
            partition: "{{ partition }}"
        register: result

      # The default setting for update_password is "always", so this
      # check should return a "changed" event
      - name: Assert Create user on a different partition - Idempotent check
        assert:
            that:
                - result|changed

      - name: Remove user on different partition
        bigip_user:
            server: "{{ inventory_hostname }}"
            user: "{{ bigip_username }}"
            password: "{{ bigip_password }}"
            validate_certs: "{{ validate_certs }}"
            username_credential: "{{ username_credential }}"
            state: "absent"
            partition: "{{ partition }}"
        register: result

      - name: Assert Remove user on different partition
        assert:
            that:
                - result|changed

      - name: Remove user on different partition - Idempotent check
        bigip_user:
            server: "{{ inventory_hostname }}"
            user: "{{ bigip_username }}"
            password: "{{ bigip_password }}"
            validate_certs: "{{ validate_certs }}"
            username_credential: "{{ username_credential }}"
            state: "absent"
            partition: "{{ partition }}"
        register: result

      - name: Assert Remove user on different partition - Idempotent check
        assert:
            that:
                - not result|changed

      - name: Create user - REST
        bigip_user:
            server: "{{ inventory_hostname }}"
            user: "{{ bigip_username }}"
            password: "{{ bigip_password }}"
            validate_certs: "{{ validate_certs }}"
            username_credential: "{{ username_credential }}"
            password_credential: "{{ password_credential }}"
            connection: "rest"
        register: result

      - name: Assert Create user - REST
        assert:
            that:
                - result|changed

      - name: Create user - REST - Idempotent check
        bigip_user:
            server: "{{ inventory_hostname }}"
            user: "{{ bigip_username }}"
            password: "{{ bigip_password }}"
            validate_certs: "{{ validate_certs }}"
            username_credential: "{{ username_credential }}"
            password_credential: "{{ password_credential }}"
            connection: "rest"
        register: result

      # The default setting for update_password is "always", so this
      # check should return a "changed" event
      - name: Assert Create user - REST - Idempotent check
        assert:
            that:
                - result|changed

      - name: Create user, encrypted password - REST - Idempotent check
        bigip_user:
            server: "{{ inventory_hostname }}"
            user: "{{ bigip_username }}"
            password: "{{ bigip_password }}"
            validate_certs: "{{ validate_certs }}"
            username_credential: "{{ username_credential }}"
            encrypted_credential: "{{ encrypted_credential }}"
            connection: "rest"
        register: result

      # The default setting for update_password is "always", so this
      # check should return a "changed" event
      - name: Assert Create user - REST - Idempotent check
        assert:
            that:
                - result|changed

      - name: Create user, no password - REST - Idempotent check
        bigip_user:
            server: "{{ inventory_hostname }}"
            user: "{{ bigip_username }}"
            password: "{{ bigip_password }}"
            validate_certs: "{{ validate_certs }}"
            username_credential: "{{ username_credential }}"
            connection: "rest"
        register: result

      # The default setting for update_password is "always", so this
      # check should NOT return a "changed" event
      - name: Assert Create user - REST - Idempotent check
        assert:
            that:
                - not result|changed

      - name: Create user with password on_create - REST
        bigip_user:
            server: "{{ inventory_hostname }}"
            user: "{{ bigip_username }}"
            password: "{{ bigip_password }}"
            validate_certs: "{{ validate_certs }}"
            username_credential: "{{ username_credential }}"
            password_credential: "{{ password_credential }}"
            update_password: "on_create"
            connection: "rest"
        register: result

      - name: Assert Create user - REST - Idempotent check
        assert:
            that:
                - not result|changed
        tags:
            - create

      - name: Update user full name - REST
        bigip_user:
            server: "{{ inventory_hostname }}"
            user: "{{ bigip_username }}"
            password: "{{ bigip_password }}"
            validate_certs: "{{ validate_certs }}"
            username_credential: "{{ username_credential }}"
            full_name: "{{ full_name }}"
            connection: "rest"
        register: result

      - name: Assert Update user full name - REST
        assert:
            that:
                - result|changed

      - name: Update user full name - REST - Idempotent check
        bigip_user:
            server: "{{ inventory_hostname }}"
            user: "{{ bigip_username }}"
            password: "{{ bigip_password }}"
            validate_certs: "{{ validate_certs }}"
            username_credential: "{{ username_credential }}"
            full_name: "{{ full_name }}"
            connection: "rest"
        register: result

      - name: Assert Update user full name - REST
        assert:
            that:
                - not result|changed

      - name: Update user shell to tmsh - REST
        bigip_user:
            server: "{{ inventory_hostname }}"
            user: "{{ bigip_username }}"
            password: "{{ bigip_password }}"
            validate_certs: "{{ validate_certs }}"
            username_credential: "{{ username_credential }}"
            shell: "tmsh"
            connection: "rest"
        register: result

      - name: Assert Update user shell to tmsh - REST
        assert:
            that:
                - result|changed

      - name: Update user shell to tmsh - REST - Idempotent check
        bigip_user:
            server: "{{ inventory_hostname }}"
            user: "{{ bigip_username }}"
            password: "{{ bigip_password }}"
            validate_certs: "{{ validate_certs }}"
            username_credential: "{{ username_credential }}"
            shell: "tmsh"
            connection: "rest"
        register: result

      - name: Assert Update user shell to tmsh - REST - Idempotent check
        assert:
            that:
                - not result|changed

      - name: Update user shell to none - REST
        bigip_user:
            server: "{{ inventory_hostname }}"
            user: "{{ bigip_username }}"
            password: "{{ bigip_password }}"
            validate_certs: "{{ validate_certs }}"
            username_credential: "{{ username_credential }}"
            shell: "none"
            connection: "rest"
        register: result

      - name: Assert Update user shell to none - REST
        assert:
            that:
                - result|changed

      - name: Update user shell to none - REST - Idempotent check
        bigip_user:
            server: "{{ inventory_hostname }}"
            user: "{{ bigip_username }}"
            password: "{{ bigip_password }}"
            validate_certs: "{{ validate_certs }}"
            username_credential: "{{ username_credential }}"
            shell: "none"
            connection: "rest"
        register: result

      - name: Assert Update user shell to none - REST - Idempotent check
        assert:
            that:
                - not result|changed

      # This should fail because the user does not have the appropriate role
      - name: Update user shell to bash - REST
        bigip_user:
            server: "{{ inventory_hostname }}"
            user: "{{ bigip_username }}"
            password: "{{ bigip_password }}"
            validate_certs: "{{ validate_certs }}"
            username_credential: "{{ username_credential }}"
            shell: "bash"
            connection: "rest"
        ignore_errors: true
        register: result

      - name: Assert Update user shell to bash - REST
        assert:
            that:
                - not result|changed

      - name: Remove user - REST
        bigip_user:
            server: "{{ inventory_hostname }}"
            user: "{{ bigip_username }}"
            password: "{{ bigip_password }}"
            validate_certs: "{{ validate_certs }}"
            username_credential: "{{ username_credential }}"
            state: "absent"
            connection: "rest"
        register: result

      - name: Assert Remove user - REST
        assert:
            that:
                - result|changed

      - name: Remove user - REST - Idempotent check
        bigip_user:
            server: "{{ inventory_hostname }}"
            user: "{{ bigip_username }}"
            password: "{{ bigip_password }}"
            validate_certs: "{{ validate_certs }}"
            username_credential: "{{ username_credential }}"
            state: "absent"
            connection: "rest"
        register: result

      - name: Assert Remove user - REST - Idempotent check
        assert:
            that:
                - not result|changed

      - name: Create user on a different partition - REST
        bigip_user:
            server: "{{ inventory_hostname }}"
            user: "{{ bigip_username }}"
            password: "{{ bigip_password }}"
            validate_certs: "{{ validate_certs }}"
            username_credential: "{{ username_credential }}"
            password_credential: "{{ password_credential }}"
            partition: "{{ partition }}"
            connection: "rest"
        register: result

      - name: Assert Create user on a different partition - REST
        assert:
            that:
                - result|changed

      - name: Create user on a different partition - REST - Idempotent check
        bigip_user:
            server: "{{ inventory_hostname }}"
            user: "{{ bigip_username }}"
            password: "{{ bigip_password }}"
            validate_certs: "{{ validate_certs }}"
            username_credential: "{{ username_credential }}"
            password_credential: "{{ password_credential }}"
            partition: "{{ partition }}"
            connection: "rest"
        register: result

      # The default setting for update_password is "always", so this
      # check should return a "changed" event
      - name: Assert Create user on a different partition - REST - Idempotent check
        assert:
            that:
                - result|changed

      - name: Remove user on different partition - REST
        bigip_user:
            server: "{{ inventory_hostname }}"
            user: "{{ bigip_username }}"
            password: "{{ bigip_password }}"
            validate_certs: "{{ validate_certs }}"
            username_credential: "{{ username_credential }}"
            state: "absent"
            partition: "{{ partition }}"
            connection: "rest"
        register: result

      - name: Assert Remove user on different partition - REST
        assert:
            that:
                - result|changed

      - name: Remove user on different partition - REST - Idempotent check
        bigip_user:
            server: "{{ inventory_hostname }}"
            user: "{{ bigip_username }}"
            password: "{{ bigip_password }}"
            validate_certs: "{{ validate_certs }}"
            username_credential: "{{ username_credential }}"
            state: "absent"
            partition: "{{ partition }}"
            connection: "rest"
        register: result

      - name: Assert Remove user on different partition - REST - Idempotent check
        assert:
            that:
                - not result|changed
